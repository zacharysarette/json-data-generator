{"version":3,"sources":["webpack://jsonRandomDataGenerator/webpack/universalModuleDefinition","webpack://jsonRandomDataGenerator/./src/build.js","webpack://jsonRandomDataGenerator/./src/buildConfig.js","webpack://jsonRandomDataGenerator/./src/generateJsonString.js","webpack://jsonRandomDataGenerator/./src/generateObject.js","webpack://jsonRandomDataGenerator/./src/getValue.js","webpack://jsonRandomDataGenerator/./src/getValues.js","webpack://jsonRandomDataGenerator/./src/index.js","webpack://jsonRandomDataGenerator/./src/read.js","webpack://jsonRandomDataGenerator/./src/utils.js","webpack://jsonRandomDataGenerator/./src/write.js","webpack://jsonRandomDataGenerator/external \"chalk\"","webpack://jsonRandomDataGenerator/external \"fs\"","webpack://jsonRandomDataGenerator/webpack/bootstrap","webpack://jsonRandomDataGenerator/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__242__","__WEBPACK_EXTERNAL_MODULE__747__","GenerateJsonString","readConfig","configString","configFile","configObject","objectArrayName","numberOfObjects","theFields","JSON","parse","start","generateAndAddObjects","fields","end","makeArrayField","name","values","type","makeValueField","makeDateField","makeNumberField","makeNumberFloatField","buildConfigObject","generateObject","this","jsonString","objectString","last","getValues","data","length","Error","i","valueType","value","utils","date","e","wrapStringInQuotes","text","getRandomDate","arr","checkAndWrap","element","getRandFromArray","val","num","rand","bottom","top","numFloat","randFloat","numSigned","getRandomSign","get","unshift","buildConfig","build","write","buildJsonStringFromConfigFile","buildJsonStringFromConfigFileAndWriteToFile","filename","buildJsonStringFromConfigString","buildJsonStringFromConfigStringAndWriteToFile","buildJsonStringFromConfigObject","Object","keys","buildJsonStringFromConfigObjectAndWriteToFile","fs","fileName","console","log","readFile","err","error","Utils","addFactor","randFactor","Math","random","floor","a","b","years","randomMonth","day","printRandDate","year","month","getMonthEnd","includes","numberToAdd","nTimes","base","getSequenceEnd","writeFile","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"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","file":"json-random-data-generator.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"chalk\"), require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"chalk\", \"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"jsonRandomDataGenerator\"] = factory(require(\"chalk\"), require(\"fs\"));\n\telse\n\t\troot[\"jsonRandomDataGenerator\"] = factory(root[\"chalk\"], root[\"fs\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__242__, __WEBPACK_EXTERNAL_MODULE__747__) {\nreturn ","const GenerateJsonString = require('./generateJsonString')\r\nconst readConfig = require('./read')\r\n\r\nmodule.exports = function ({\r\n  configString = '',\r\n  configFile = '',\r\n  configObject = {},\r\n  objectArrayName,\r\n  numberOfObjects\r\n}) {\r\n  const theFields =\r\n    configObject === {}\r\n      ? configFile === ''\r\n          ? configString === ''\r\n              ? ''\r\n              : JSON.parse(configString)[objectArrayName]\r\n          : readConfig(configFile)[objectArrayName]\r\n      : configObject[objectArrayName]\r\n\r\n  return new GenerateJsonString()\r\n    .start({ objectArrayName })\r\n    .generateAndAddObjects({\r\n      numberOfObjects,\r\n      fields: theFields\r\n    })\r\n    .end()\r\n}\r\n","module.exports = {\r\n  makeArrayField: (name = '', values = []) => {\r\n    return {\r\n      name,\r\n      type: 'arr',\r\n      values\r\n    }\r\n  },\r\n  makeValueField: (name = '', values = []) => {\r\n    return {\r\n      name,\r\n      type: 'val',\r\n      values\r\n    }\r\n  },\r\n  makeDateField: (name = '', values = []) => {\r\n    return {\r\n      name,\r\n      type: 'date',\r\n      values\r\n    }\r\n  },\r\n  makeNumberField: (name = '', values = []) => {\r\n    return {\r\n      name,\r\n      type: 'num',\r\n      values\r\n    }\r\n  },\r\n  makeNumberFloatField: (name = '', values = []) => {\r\n    return {\r\n      name,\r\n      type: 'numFloat',\r\n      values\r\n    }\r\n  },\r\n  buildConfigObject: ({ objectArrayName = '', fields = [] }) => {\r\n    return { [objectArrayName]: fields }\r\n  }\r\n}\r\n","const generateObject = require('./generateObject')\r\nmodule.exports = class GenerateJsonString {\r\n  constructor () {\r\n    this.jsonString = ''\r\n  }\r\n\r\n  start ({ objectArrayName }) {\r\n    this.jsonString += `{\\n\"${objectArrayName}\":[\\n`\r\n    return this\r\n  }\r\n\r\n  generateAndAddObjects ({ numberOfObjects, fields }) {\r\n    for (numberOfObjects; numberOfObjects > 1; numberOfObjects--) {\r\n      this.jsonString = generateObject({ fields, objectString: this.jsonString })\r\n    }\r\n    this.jsonString = generateObject({ fields, objectString: this.jsonString, last: true })\r\n    return this\r\n  }\r\n\r\n  end () {\r\n    this.jsonString += ']\\n}\\n'\r\n    return this.jsonString\r\n  }\r\n}\r\n","const getValues = require('./getValues')\r\n\r\nmodule.exports = ({ fields, objectString, last = false }) => {\r\n  const values = getValues({ data: fields })\r\n  if (values.length !== fields.length) throw new Error('Unexpected Length for values and fields')\r\n  objectString += '{'\r\n  for (let i = fields.length - 1; i > -1; i--) {\r\n    objectString += `\\n\"${fields[i].name}\": ${values[i]}`\r\n    if (i !== 0) objectString += ','\r\n  }\r\n  objectString += last ? '\\n}' : '\\n},'\r\n  return objectString\r\n}\r\n","module.exports = ({ valueType, value }) => {\r\n  const utils = require('./utils')\r\n  return {\r\n    date: (e) => utils.wrapStringInQuotes({ text: utils.getRandomDate(e) }),\r\n    arr: (e) => utils.checkAndWrap({ element: utils.getRandFromArray({ arr: e }) }),\r\n    val: (e) => utils.checkAndWrap({ element: e[0] }),\r\n    num: (e) => utils.rand({ bottom: e[0], top: e[1] }),\r\n    numFloat: (e) => utils.randFloat({ bottom: e[0], top: e[1] }),\r\n    numSigned: (e) => utils.rand({ bottom: e[0], top: e[1] }) * utils.getRandomSign()\r\n  }[valueType](value)\r\n}\r\n","module.exports = ({ data, values = [] }) => {\r\n  const get = require('./getValue')\r\n  for (let i = data.length - 1; i > -1; i--) {\r\n    values.unshift(\r\n      get({ valueType: data[i].type, value: data[i].values })\r\n    )\r\n  }\r\n  return values\r\n}\r\n","const buildConfig = require('./buildConfig')\r\nconst build = require('./build')\r\nconst write = require('./write')\r\n\r\nmodule.exports = {\r\n  buildJsonStringFromConfigFile: ({\r\n    configFile = '',\r\n    objectArrayName = '',\r\n    numberOfObjects = 0\r\n  }) =>\r\n    build({\r\n      configFile,\r\n      objectArrayName,\r\n      numberOfObjects\r\n    }),\r\n  buildJsonStringFromConfigFileAndWriteToFile: ({\r\n    filename = '',\r\n    configFile = '',\r\n    objectArrayName = '',\r\n    numberOfObjects = 0\r\n  }) =>\r\n    write({\r\n      filename,\r\n      jsonString: this.buildJsonStringFromConfigFile({\r\n        configFile,\r\n        objectArrayName,\r\n        numberOfObjects\r\n      })\r\n    }),\r\n  buildJsonStringFromConfigString: ({\r\n    configString = '',\r\n    objectArrayName = '',\r\n    numberOfObjects = 0\r\n  }) =>\r\n    build({\r\n      configString,\r\n      objectArrayName,\r\n      numberOfObjects\r\n    }),\r\n  buildJsonStringFromConfigStringAndWriteToFile: ({\r\n    filename = '',\r\n    configString = '',\r\n    objectArrayName = '',\r\n    numberOfObjects = 0\r\n  }) =>\r\n    write({\r\n      filename,\r\n      jsonString: this.buildJsonStringFromConfigString({\r\n        configString,\r\n        objectArrayName,\r\n        numberOfObjects\r\n      })\r\n    }),\r\n  configObject: buildConfig,\r\n  buildJsonStringFromConfigObject: ({\r\n    configObject,\r\n    objectArrayName = Object.keys(configObject)[0],\r\n    numberOfObjects\r\n  }) =>\r\n    build({\r\n      configObject,\r\n      objectArrayName,\r\n      numberOfObjects\r\n    }),\r\n  buildJsonStringFromConfigObjectAndWriteToFile: ({\r\n    filename = '',\r\n    configObject = { objectArrayName: [] },\r\n    objectArrayName = '',\r\n    numberOfObjects = 0\r\n  }) =>\r\n    write({\r\n      filename,\r\n      jsonString: this.buildJsonStringFromConfigObject({\r\n        configObject,\r\n        objectArrayName,\r\n        numberOfObjects\r\n      })\r\n    })\r\n}\r\n","const fs = require('fs')\r\n\r\nmodule.exports = ({ fileName }) => {\r\n  console.log('Going to read file')\r\n  fs.readFile(fileName, (err, data) => {\r\n    if (err) {\r\n      return console.error(err)\r\n    }\r\n    console.log(\r\n      require('chalk').green.inverse('file read successfully!')\r\n    )\r\n    return data\r\n  })\r\n}\r\n","module.exports = class Utils {\r\n  static wrapStringInQuotes ({ text }) {\r\n    return '\"' + text + '\"'\r\n  }\r\n\r\n  static checkAndWrap ({ element }) {\r\n    return typeof element === 'string'\r\n      ? Utils.wrapStringInQuotes({ text: element })\r\n      : element\r\n  }\r\n\r\n  static rand ({ bottom, top, addFactor = 0, randFactor = Math.random() }) {\r\n    if (bottom === 0) addFactor = 1\r\n    return (\r\n      Math.floor(randFactor * (top - bottom + addFactor)) +\r\n      (bottom + addFactor) -\r\n      addFactor\r\n    )\r\n  }\r\n\r\n  static randFloat ({ bottom, top, addFactor = 0, randFactor = Math.random() }) {\r\n    if (bottom === 0) addFactor = 1\r\n    return (\r\n      randFactor * (top - bottom + addFactor) + (bottom + addFactor) - addFactor\r\n    )\r\n  }\r\n\r\n  static getRandFromArray ({ arr }) {\r\n    return arr[Utils.rand({ bottom: 0, top: arr.length - 1 })]\r\n  }\r\n\r\n  static sum ({ a, b }) {\r\n    return a + b\r\n  }\r\n\r\n  static getRandomDate (\r\n    years,\r\n    randomMonth = Utils.rand({ bottom: 1, top: 12 }),\r\n    day = undefined\r\n  ) {\r\n    return Utils.printRandDate({\r\n      year: Utils.getRandFromArray({ arr: years }),\r\n      month: randomMonth,\r\n      day\r\n    })\r\n  }\r\n\r\n  static printRandDate ({\r\n    year,\r\n    month,\r\n    day = Utils.rand({ bottom: 1, top: Utils.getMonthEnd({ month, year }) })\r\n  }) {\r\n    return `${year}-${month}-${day}`\r\n  }\r\n\r\n  static getMonthEnd ({ month, year }) {\r\n    if (month < 1 || month > 12) {\r\n      throw new Error('Invalid month, expected 1 - 12.')\r\n    }\r\n    if (month === 2) {\r\n      return year % 100 === 0\r\n        ? year % 400 === 0\r\n            ? 29\r\n            : 28\r\n        : year % 4 === 0\r\n          ? 29\r\n          : 28\r\n    }\r\n    return [4, 6, 9, 11].includes(month) ? 30 : 31\r\n  }\r\n\r\n  static getRandomSign () {\r\n    return Utils.getRandFromArray({ arr: [1, -1, 0] })\r\n  }\r\n\r\n  static getSequenceEnd ({ numberToAdd, nTimes, base = 0 }) {\r\n    if (nTimes > 0) {\r\n      return Utils.getSequenceEnd({\r\n        numberToAdd,\r\n        nTimes: nTimes - 1,\r\n        base: base + numberToAdd\r\n      })\r\n    }\r\n    return base\r\n  }\r\n}\r\n","const fs = require('fs')\r\n\r\nmodule.exports = ({ fileName, jsonString }) => {\r\n  console.log('Going to write into existing file')\r\n  fs.writeFile(fileName, jsonString, (err) => {\r\n    if (err) {\r\n      return console.error(err)\r\n    }\r\n    return console.log(\r\n      require('chalk').green.inverse('Data written successfully!')\r\n    )\r\n  })\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__242__;","module.exports = __WEBPACK_EXTERNAL_MODULE__747__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(138);\n"],"sourceRoot":""}